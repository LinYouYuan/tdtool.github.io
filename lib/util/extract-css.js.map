{"version":3,"sources":["../../src/util/extract-css.js"],"names":["extractCss","loadTheme","theme","String","require","Object","config","target","sourceMap","minimize","postCss","cssLoader","loader","options","modules","localIdentName","discardComments","removeAll","postcssLoader","plugins","lessLoader","modifyVars","rules","push","test","use","ExtractText","extract","fallback"],"mappings":";;;;;kBAqBwBA,U;;AAdxB;;;;AAEA;;;;;;AATA;;;;;;;AAWA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAI,aAAGC,MAAH,CAAUD,KAAV,CAAJ,EAAsB;AACpB,WAAOE,QAAQF,KAAR,CAAP;AACD;AACD,MAAI,aAAGG,MAAH,CAAUH,KAAV,CAAJ,EAAsB;AACpB,WAAOA,KAAP;AACD;AACD,SAAO,IAAP;AACD;;AAEc,SAASF,UAAT,OAAiFM,MAAjF,EAAyF;AAAA,MAAnEN,UAAmE,QAAnEA,UAAmE;AAAA,MAAvDO,MAAuD,QAAvDA,MAAuD;AAAA,MAA/CC,SAA+C,QAA/CA,SAA+C;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBR,KAAiB,QAAjBA,KAAiB;;AACtG,MAAI,CAACF,UAAL,EAAiB;AACf;AACD;AACD,MAAMW,YAAY;AAChBC,4BAAqBL,WAAW,MAAX,GAAoB,SAApB,GAAgC,EAArD,CADgB;AAEhBM,aAAS;AACPL,iBAAW,CAAC,CAACA,SADN;AAEPM,eAAS,IAFF;AAGPC,sBAAgB,SAHT;AAIPN,gBAAUF,WAAW,MAAX,IAAqB,CAAC,CAACE,QAJ1B;AAKPO,uBAAiB,EAAEC,WAAW,IAAb;AALV;AAFO,GAAlB;AAUA,MAAMC,gBAAgB;AACpBN,YAAQ,gBADY;AAEpBC,aAAS;AACPM,eAAS;AAAA,eAAOT,WAAW,EAAlB;AAAA;AADF;AAFW,GAAtB;AAMA,MAAMU,aAAa;AACjBR,YAAQ,aADS;AAEjBC,aAAS;AACPL,iBAAW,CAAC,CAACA,SADN;AAEPa,kBAAYpB,UAAUC,KAAV;AAFL;AAFQ,GAAnB;AAOA,MAAIK,WAAW,MAAf,EAAuB;AACrBD,WAAOgB,KAAP,CAAaC,IAAb,CAAkB;AAChBC,YAAM,SADU;AAEhBC,WAAK,CACHd,SADG,EAEHO,aAFG,EAGHE,UAHG;AAFW,KAAlB;AAQAd,WAAOgB,KAAP,CAAaC,IAAb,CAAkB;AAChBC,YAAM,QADU;AAEhBC,WAAK,CACHd,SADG,EAEHO,aAFG;AAFW,KAAlB;AAOA;AACD;;AAED,MAAIlB,eAAe,IAAnB,EAAyB;AACvBM,WAAOa,OAAP,CAAeO,WAAf,GAA6B,uCAAsB,YAAtB,CAA7B;AACApB,WAAOgB,KAAP,CAAaC,IAAb,CAAkB;AAChBC,YAAM,SADU;AAEhBC,WAAK,mCAAkBE,OAAlB,CAA0B;AAC7BC,kBAAU,cADmB;AAE7BH,aAAK,CACHd,SADG,EAEHO,aAFG,EAGHE,UAHG;AAFwB,OAA1B;AAFW,KAAlB;AAWAd,WAAOgB,KAAP,CAAaC,IAAb,CAAkB;AAChBC,YAAM,QADU;AAEhBC,WAAK,mCAAkBE,OAAlB,CAA0B;AAC7BC,kBAAU,cADmB;AAE7BH,aAAK,CACHd,SADG,EAEHO,aAFG;AAFwB,OAA1B;AAFW,KAAlB;AAUD,GAvBD,MAuBO;AACLZ,WAAOgB,KAAP,CAAaC,IAAb,CAAkB;AAChBC,YAAM,SADU;AAEhBC,WAAK,CACH,cADG,EAEHd,SAFG,EAGHO,aAHG,EAIHE,UAJG;AAFW,KAAlB;AASAd,WAAOgB,KAAP,CAAaC,IAAb,CAAkB;AAChBC,YAAM,QADU;AAEhBC,WAAK,CACH,cADG,EAEHd,SAFG,EAGHO,aAHG;AAFW,KAAlB;AAQD;AACF","file":"extract-css.js","sourcesContent":["/**\n * @Author: Zhengfeng.Yao <yzf>\n * @Date:   2017-04-28 22:48:26\n * @Last modified by:   yzf\n * @Last modified time: 2017-04-28 22:48:43\n */\n\nimport ExtractTextPlugin from 'extract-text-webpack-plugin'\n\nimport is from './is'\n\nfunction loadTheme(theme) {\n  if (is.String(theme)) {\n    return require(theme)\n  }\n  if (is.Object(theme)) {\n    return theme\n  }\n  return null\n}\n\nexport default function extractCss({ extractCss, target, sourceMap, minimize, postCss, theme }, config) {\n  if (!extractCss) {\n    return\n  }\n  const cssLoader = {\n    loader: `css-loader${target === 'node' ? '/locals' : ''}`,\n    options: {\n      sourceMap: !!sourceMap,\n      modules: true,\n      localIdentName: '[local]',\n      minimize: target !== 'node' && !!minimize,\n      discardComments: { removeAll: true }\n    }\n  }\n  const postcssLoader = {\n    loader: 'postcss-loader',\n    options: {\n      plugins: () => (postCss || [])\n    }\n  }\n  const lessLoader = {\n    loader: 'less-loader',\n    options: {\n      sourceMap: !!sourceMap,\n      modifyVars: loadTheme(theme)\n    }\n  }\n  if (target === 'node') {\n    config.rules.push({\n      test: /\\.less$/,\n      use: [\n        cssLoader,\n        postcssLoader,\n        lessLoader\n      ]\n    })\n    config.rules.push({\n      test: /\\.css$/,\n      use: [\n        cssLoader,\n        postcssLoader\n      ]\n    })\n    return\n  }\n\n  if (extractCss === true) {\n    config.plugins.ExtractText = new ExtractTextPlugin('[name].css')\n    config.rules.push({\n      test: /\\.less$/,\n      use: ExtractTextPlugin.extract({\n        fallback: 'style-loader',\n        use: [\n          cssLoader,\n          postcssLoader,\n          lessLoader\n        ]\n      })\n    })\n    config.rules.push({\n      test: /\\.css$/,\n      use: ExtractTextPlugin.extract({\n        fallback: 'style-loader',\n        use: [\n          cssLoader,\n          postcssLoader\n        ]\n      })\n    })\n  } else {\n    config.rules.push({\n      test: /\\.less$/,\n      use: [\n        'style-loader',\n        cssLoader,\n        postcssLoader,\n        lessLoader\n      ]\n    })\n    config.rules.push({\n      test: /\\.css$/,\n      use: [\n        'style-loader',\n        cssLoader,\n        postcssLoader\n      ]\n    })\n  }\n}\n"]}