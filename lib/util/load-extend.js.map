{"version":3,"sources":["../../src/util/load-extend.js"],"names":["importExtend","extend","config","options","packageName","pluginExists","fatal","require","success","module","exports","_extends","Object","forEach","Boolean","key","Array","String","item"],"mappings":";;;;;;AAOA;;;;AACA;;;;;;AARA;;;;;;;AAUA,IAAMA,eAAe,SAAfA,YAAe,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,EAA6B;AAChD,MAAMC,0BAAwBH,MAA9B;AACA,MAAI,CAAC,aAAGI,YAAH,CAAgBD,WAAhB,CAAL,EAAmC;AACjC,qBAAOE,KAAP,qBAA+BF,WAA/B,sBAA0DA,WAA1D,4BAA0FA,WAA1F;AACA;AACD;AACDG,sBAAkBN,MAAlB,EAA4BC,MAA5B,EAAoCC,OAApC;AACA,mBAAOK,OAAP,sBAAkCP,MAAlC;AACD,CARD;;AAUA;;;;;;AAMAQ,OAAOC,OAAP,GAAiB,UAACC,QAAD,EAAWT,MAAX,EAAsB;AACrC,MAAI,aAAGU,MAAH,CAAUD,QAAV,CAAJ,EAAyB;AACvB,wBAAYA,YAAY,EAAxB,EAA4BE,OAA5B,CAAoC,eAAO;AACzC,UAAMV,UAAU,aAAGW,OAAH,CAAWH,SAASI,GAAT,CAAX,IAA4B,IAA5B,GAAmCJ,SAASI,GAAT,CAAnD;AACAf,mBAAae,GAAb,EAAkBb,MAAlB,EAA0BC,OAA1B;AACD,KAHD;AAID,GALD,MAKO,IAAI,aAAGa,KAAH,CAASL,QAAT,CAAJ,EAAwB;AAC7BA,aAASE,OAAT,CAAiB,gBAAQ;AACvB,UAAI,aAAGI,MAAH,CAAUC,IAAV,CAAJ,EAAqB;AACnBlB,qBAAakB,IAAb,EAAmBhB,MAAnB;AACD;AACD,UAAI,aAAGc,KAAH,CAASE,IAAT,CAAJ,EAAoB;AAClBlB,qBAAakB,KAAK,CAAL,CAAb,EAAsBhB,MAAtB,EAA8BgB,KAAK,CAAL,CAA9B;AACD;AACF,KAPD;AAQD;AACF,CAhBD","file":"load-extend.js","sourcesContent":["/**\n * @Author: Zhengfeng.Yao <yzf>\n * @Date:   2017-05-02 18:48:10\n * @Last modified by:   yzf\n * @Last modified time: 2017-05-02 18:48:30\n */\n\nimport logger from './logger'\nimport is from './is'\n\nconst importExtend = (extend, config, options) => {\n  const packageName = `tdtool-${extend}`\n  if (!is.pluginExists(packageName)) {\n    logger.fatal(`Please install ${packageName}, run 'npm i ${packageName} -D' or 'yarn add ${packageName} -D'`)\n    return\n  }\n  require(`tdtool-${extend}`)(config, options)\n  logger.success(`Loaded success: ${extend}`)\n}\n\n/**\n * 加载并装配插件\n *\n * @param  {array | object} _extends\n * @param  {Config} config\n */\nmodule.exports = (_extends, config) => {\n  if (is.Object(_extends)) {\n    Object.keys(_extends || {}).forEach(key => {\n      const options = is.Boolean(_extends[key]) ? null : _extends[key]\n      importExtend(key, config, options)\n    })\n  } else if (is.Array(_extends)) {\n    _extends.forEach(item => {\n      if (is.String(item)) {\n        importExtend(item, config)\n      }\n      if (is.Array(item)) {\n        importExtend(item[0], config, item[1])\n      }\n    })\n  }\n}\n"]}